language: node_js
node_js:
  - "stable"
dist: trusty
sudo: false
cache:
  directories:
  - node_modules

before_install:
  - set -e
  - if [ "$TRAVIS_BRANCH" == "master" ]; then
      AWS_BUCKET="slides.stage.datacite.org";
      CLOUDFRONT_DISTRIBUTION_ID=$CLOUDFRONT_DISTRIBUTION_ID_STAGE;
      cp .env.master .env;
      AUTO_DEPLOY=true;
    elif [ "$TRAVIS_BRANCH" == "stage" ]; then
      AWS_BUCKET="slides.stage.datacite.org";
      CLOUDFRONT_DISTRIBUTION_ID=$CLOUDFRONT_DISTRIBUTION_ID_STAGE;
      cp .env.stage .env;
      AUTO_DEPLOY=true;
    else
      AUTO_DEPLOY=false;
    fi

install:
  - yarn
  - sudo pip install awscli

script:
  - npm run build

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: $AWS_BUCKET
    region: eu-west-1
    skip_cleanup: true
    local_dir: public
    acl: public_read
    cache_control: "max-age=31536000"
    on:
      all_branches: true

after_deploy:
  - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY
  - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_KEY
  # Allow `awscli` to make requests to CloudFront.
  - aws configure set preview.cloudfront true
  # Invalidate every object in the targeted distribution.
  - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"

notifications:
  email: false
